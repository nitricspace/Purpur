From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <Blake.Galbreath@GMail.com>
Date: Wed, 15 Jul 2020 12:40:25 -0500
Subject: [PATCH] Configurable dungeon seed


diff --git a/src/main/java/net/minecraft/server/WorldGenDecoratorDungeon.java b/src/main/java/net/minecraft/server/WorldGenDecoratorDungeon.java
index 70d222996..2bebbd699 100644
--- a/src/main/java/net/minecraft/server/WorldGenDecoratorDungeon.java
+++ b/src/main/java/net/minecraft/server/WorldGenDecoratorDungeon.java
@@ -6,6 +6,7 @@ import java.util.stream.IntStream;
 import java.util.stream.Stream;
 
 public class WorldGenDecoratorDungeon extends WorldGenDecorator<WorldGenDecoratorDungeonConfiguration> {
+    private Random random; // Purpur
 
     public WorldGenDecoratorDungeon(Codec<WorldGenDecoratorDungeonConfiguration> codec) {
         super(codec);
@@ -14,10 +15,17 @@ public class WorldGenDecoratorDungeon extends WorldGenDecorator<WorldGenDecorato
     public Stream<BlockPosition> a(GeneratorAccess generatoraccess, ChunkGenerator chunkgenerator, Random random, WorldGenDecoratorDungeonConfiguration worldgendecoratordungeonconfiguration, BlockPosition blockposition) {
         int i = worldgendecoratordungeonconfiguration.b;
 
+        // Purpur start
+        if (this.random == null) {
+            int seed = net.pl3x.purpur.PurpurConfig.dungeonSeed;
+            this.random = seed == -1 ? random : new Random(seed);
+        }
+        final Random rand = this.random;
+        // Purpur end
         return IntStream.range(0, i).mapToObj((j) -> {
-            int k = random.nextInt(16) + blockposition.getX();
-            int l = random.nextInt(16) + blockposition.getZ();
-            int i1 = random.nextInt(chunkgenerator.getGenerationDepth());
+            int k = rand.nextInt(16) + blockposition.getX(); // Purpur
+            int l = rand.nextInt(16) + blockposition.getZ(); // Purpur
+            int i1 = rand.nextInt(chunkgenerator.getGenerationDepth()); // Purpur
 
             return new BlockPosition(k, i1, l);
         });
diff --git a/src/main/java/net/minecraft/server/WorldGenDungeons.java b/src/main/java/net/minecraft/server/WorldGenDungeons.java
index 3c7c93645..1f6ff7848 100644
--- a/src/main/java/net/minecraft/server/WorldGenDungeons.java
+++ b/src/main/java/net/minecraft/server/WorldGenDungeons.java
@@ -11,12 +11,21 @@ public class WorldGenDungeons extends WorldGenerator<WorldGenFeatureEmptyConfigu
     private static final Logger LOGGER = LogManager.getLogger();
     private static final EntityTypes<?>[] ac = new EntityTypes[]{EntityTypes.SKELETON, EntityTypes.ZOMBIE, EntityTypes.ZOMBIE, EntityTypes.SPIDER};
     private static final IBlockData ad = Blocks.CAVE_AIR.getBlockData();
+    private Random random; // Purpur
 
     public WorldGenDungeons(Codec<WorldGenFeatureEmptyConfiguration> codec) {
         super(codec);
     }
 
+    public boolean generate(GeneratorAccessSeed generatoraccessseed, StructureManager structuremanager, ChunkGenerator chunkgenerator, Random random, BlockPosition blockposition, WorldGenFeatureEmptyConfiguration worldgenfeatureemptyconfiguration) { return a(generatoraccessseed, structuremanager, chunkgenerator, random, blockposition, worldgenfeatureemptyconfiguration); } // Purpur - decompile error?
     public boolean a(GeneratorAccessSeed generatoraccessseed, StructureManager structuremanager, ChunkGenerator chunkgenerator, Random random, BlockPosition blockposition, WorldGenFeatureEmptyConfiguration worldgenfeatureemptyconfiguration) {
+        // Purpur start
+        if (this.random == null) {
+            int seed = net.pl3x.purpur.PurpurConfig.dungeonSeed;
+            this.random = seed == -1 ? random : new Random(seed);
+        }
+        random = this.random;
+        // Purpur end
         boolean flag = true;
         int i = random.nextInt(2) + 2;
         int j = -i - 1;
diff --git a/src/main/java/net/pl3x/purpur/PurpurConfig.java b/src/main/java/net/pl3x/purpur/PurpurConfig.java
index c7cbe7424..bbc8427e3 100644
--- a/src/main/java/net/pl3x/purpur/PurpurConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurConfig.java
@@ -135,9 +135,12 @@ public class PurpurConfig {
     }
 
     public static int endSpikeSeed = 1;
+    public static int dungeonSeed = -1;
     private static void seedSettings() {
         endSpikeSeed = getInt("settings.seed.end-spike", endSpikeSeed);
+        dungeonSeed = getInt("settings.seed.dungeon", dungeonSeed);
         TimingsManager.hiddenConfigs.add("settings.seed");
         TimingsManager.hiddenConfigs.add("settings.seed.end-spike");
+        TimingsManager.hiddenConfigs.add("settings.seed.dungeon");
     }
 }
