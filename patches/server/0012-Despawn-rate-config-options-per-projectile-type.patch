From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: jmp <jasonpenilla2@me.com>
Date: Mon, 14 Sep 2020 10:09:05 -0700
Subject: [PATCH] Despawn rate config options per projectile type

Default values of -1 respect vanilla behaviour.

diff --git a/src/main/java/net/minecraft/server/EntityArrow.java b/src/main/java/net/minecraft/server/EntityArrow.java
index 78a3fd036..41d0ccb89 100644
--- a/src/main/java/net/minecraft/server/EntityArrow.java
+++ b/src/main/java/net/minecraft/server/EntityArrow.java
@@ -23,7 +23,7 @@ public abstract class EntityArrow extends IProjectile {
     protected int c;
     public EntityArrow.PickupStatus fromPlayer;
     public int shake;
-    public int despawnCounter;
+    //public int despawnCounter; // Purpur - moved to IProjectile
     private double damage;
     public int knockbackStrength;
     private SoundEffect ak;
@@ -255,13 +255,23 @@ public abstract class EntityArrow extends IProjectile {
 
     }
 
-    protected final void tickDespawnCounter() { this.h(); } // Paper - OBFHELPER
-    protected void h() {
-        ++this.despawnCounter;
-        if (this.despawnCounter >= (fromPlayer == PickupStatus.CREATIVE_ONLY ? world.paperConfig.creativeArrowDespawnRate : (fromPlayer == PickupStatus.DISALLOWED ? world.paperConfig.nonPlayerArrowDespawnRate : ((this instanceof EntityThrownTrident) ? world.spigotConfig.tridentDespawnRate : world.spigotConfig.arrowDespawnRate)))) { // Spigot // Paper - TODO: Extract this to init?
-            this.die();
+    // Purpur start
+    protected int getPurpurDespawnRate() {
+        if (fromPlayer == PickupStatus.CREATIVE_ONLY) {
+            return world.paperConfig.creativeArrowDespawnRate;
+        }
+        if (fromPlayer == PickupStatus.DISALLOWED) {
+            return world.paperConfig.nonPlayerArrowDespawnRate;
+        }
+        if (this instanceof EntityThrownTrident) {
+            return world.spigotConfig.tridentDespawnRate;
         }
+        return world.spigotConfig.arrowDespawnRate;
+    }
+    // Purpur end
 
+    protected void h() {
+        tickDespawnCounter(); // Purpur
     }
 
     private void A() {
diff --git a/src/main/java/net/minecraft/server/EntityDragonFireball.java b/src/main/java/net/minecraft/server/EntityDragonFireball.java
index 3461a632a..804633c4a 100644
--- a/src/main/java/net/minecraft/server/EntityDragonFireball.java
+++ b/src/main/java/net/minecraft/server/EntityDragonFireball.java
@@ -75,4 +75,11 @@ public class EntityDragonFireball extends EntityFireball {
     protected boolean W_() {
         return false;
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.world.purpurConfig.dragonFireballDespawnRate;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/server/EntityEgg.java b/src/main/java/net/minecraft/server/EntityEgg.java
index 8b8076e4e..807f4b441 100644
--- a/src/main/java/net/minecraft/server/EntityEgg.java
+++ b/src/main/java/net/minecraft/server/EntityEgg.java
@@ -87,4 +87,11 @@ public class EntityEgg extends EntityProjectileThrowable {
     protected Item getDefaultItem() {
         return Items.EGG;
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.world.purpurConfig.eggDespawnRate;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/server/EntityEnderPearl.java b/src/main/java/net/minecraft/server/EntityEnderPearl.java
index 458f497c1..30a8b48d8 100644
--- a/src/main/java/net/minecraft/server/EntityEnderPearl.java
+++ b/src/main/java/net/minecraft/server/EntityEnderPearl.java
@@ -106,4 +106,11 @@ public class EntityEnderPearl extends EntityProjectileThrowable {
 
         return super.b(worldserver);
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.world.purpurConfig.enderPearlDespawnRate;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/server/EntityFireworks.java b/src/main/java/net/minecraft/server/EntityFireworks.java
index f10a17ec4..8d332f419 100644
--- a/src/main/java/net/minecraft/server/EntityFireworks.java
+++ b/src/main/java/net/minecraft/server/EntityFireworks.java
@@ -298,4 +298,11 @@ public class EntityFireworks extends IProjectile {
     public Packet<?> P() {
         return new PacketPlayOutSpawnEntity(this);
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.world.purpurConfig.fireworkDespawnRate;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/server/EntityFishingHook.java b/src/main/java/net/minecraft/server/EntityFishingHook.java
index 06ada8ada..86a19cb70 100644
--- a/src/main/java/net/minecraft/server/EntityFishingHook.java
+++ b/src/main/java/net/minecraft/server/EntityFishingHook.java
@@ -576,4 +576,11 @@ public class EntityFishingHook extends IProjectile {
 
         private HookState() {}
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.world.purpurConfig.fishingHookDespawnRate;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/server/EntityLargeFireball.java b/src/main/java/net/minecraft/server/EntityLargeFireball.java
index 62d61dd0c..5307f4f0b 100644
--- a/src/main/java/net/minecraft/server/EntityLargeFireball.java
+++ b/src/main/java/net/minecraft/server/EntityLargeFireball.java
@@ -66,4 +66,11 @@ public class EntityLargeFireball extends EntityFireballFireball {
         }
 
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.world.purpurConfig.largeFireballDespawnRate;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/server/EntityLlamaSpit.java b/src/main/java/net/minecraft/server/EntityLlamaSpit.java
index 7636a51a7..3e6438c97 100644
--- a/src/main/java/net/minecraft/server/EntityLlamaSpit.java
+++ b/src/main/java/net/minecraft/server/EntityLlamaSpit.java
@@ -71,4 +71,11 @@ public class EntityLlamaSpit extends IProjectile {
     public Packet<?> P() {
         return new PacketPlayOutSpawnEntity(this);
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.world.purpurConfig.llamaSpitDespawnRate;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/server/EntityPotion.java b/src/main/java/net/minecraft/server/EntityPotion.java
index 32ad2b0c9..3be366485 100644
--- a/src/main/java/net/minecraft/server/EntityPotion.java
+++ b/src/main/java/net/minecraft/server/EntityPotion.java
@@ -240,4 +240,11 @@ public class EntityPotion extends EntityProjectileThrowable {
         }
 
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.world.purpurConfig.potionDespawnRate;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/server/EntityShulkerBullet.java b/src/main/java/net/minecraft/server/EntityShulkerBullet.java
index 7e37605e3..7ad68e46e 100644
--- a/src/main/java/net/minecraft/server/EntityShulkerBullet.java
+++ b/src/main/java/net/minecraft/server/EntityShulkerBullet.java
@@ -313,4 +313,11 @@ public class EntityShulkerBullet extends IProjectile {
     public Packet<?> P() {
         return new PacketPlayOutSpawnEntity(this);
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.world.purpurConfig.shulkerBulletDespawnRate;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/server/EntitySmallFireball.java b/src/main/java/net/minecraft/server/EntitySmallFireball.java
index 8b41d4943..014d591b8 100644
--- a/src/main/java/net/minecraft/server/EntitySmallFireball.java
+++ b/src/main/java/net/minecraft/server/EntitySmallFireball.java
@@ -86,4 +86,11 @@ public class EntitySmallFireball extends EntityFireballFireball {
     public boolean damageEntity(DamageSource damagesource, float f) {
         return false;
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.world.purpurConfig.smallFireballDespawnRate;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/server/EntitySnowball.java b/src/main/java/net/minecraft/server/EntitySnowball.java
index e44249f59..34a5f481e 100644
--- a/src/main/java/net/minecraft/server/EntitySnowball.java
+++ b/src/main/java/net/minecraft/server/EntitySnowball.java
@@ -14,6 +14,12 @@ public class EntitySnowball extends EntityProjectileThrowable {
         super(EntityTypes.SNOWBALL, d0, d1, d2, world);
     }
 
+    // Purpur start
+    protected int getPurpurDespawnRate() {
+        return world.purpurConfig.snowballDespawnRate;
+    }
+    // Purpur end
+
     @Override
     protected Item getDefaultItem() {
         return Items.SNOWBALL;
diff --git a/src/main/java/net/minecraft/server/EntityThrownExpBottle.java b/src/main/java/net/minecraft/server/EntityThrownExpBottle.java
index bb98b59ff..b1e81cb74 100644
--- a/src/main/java/net/minecraft/server/EntityThrownExpBottle.java
+++ b/src/main/java/net/minecraft/server/EntityThrownExpBottle.java
@@ -51,4 +51,11 @@ public class EntityThrownExpBottle extends EntityProjectileThrowable {
         }
 
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.world.purpurConfig.expBottleDespawnRate;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/server/EntityWitherSkull.java b/src/main/java/net/minecraft/server/EntityWitherSkull.java
index a2d4b675e..d12e8839d 100644
--- a/src/main/java/net/minecraft/server/EntityWitherSkull.java
+++ b/src/main/java/net/minecraft/server/EntityWitherSkull.java
@@ -116,4 +116,11 @@ public class EntityWitherSkull extends EntityFireball {
     protected boolean W_() {
         return false;
     }
+
+    // Purpur start
+    @Override
+    protected int getPurpurDespawnRate() {
+        return this.world.purpurConfig.witherSkullDespawnRate;
+    }
+    // Purpur end
 }
diff --git a/src/main/java/net/minecraft/server/IProjectile.java b/src/main/java/net/minecraft/server/IProjectile.java
index 51b812d30..371b60431 100644
--- a/src/main/java/net/minecraft/server/IProjectile.java
+++ b/src/main/java/net/minecraft/server/IProjectile.java
@@ -12,12 +12,26 @@ public abstract class IProjectile extends Entity {
 
     private UUID shooter;
     private int c;
-    private boolean d;
+    private boolean d; public boolean leftOwner() { return d; } public void setLeftOwner(boolean leftOwner) { this.d = leftOwner; } // Purpur - OBFHELPER
+    public int despawnCounter; // Purpur - moved from EntityArrow
 
     IProjectile(EntityTypes<? extends IProjectile> entitytypes, World world) {
         super(entitytypes, world);
     }
 
+    // Purpur start
+    protected final void tickDespawnCounter() {
+        if (this.getPurpurDespawnRate() != -1) {
+            ++this.despawnCounter;
+            if (this.despawnCounter >= this.getPurpurDespawnRate()) {
+                this.die();
+            }
+        }
+    }
+
+    protected abstract int getPurpurDespawnRate();
+    // Purpur end
+
     public void setShooter(@Nullable Entity entity) {
         if (entity != null) {
             this.shooter = entity.getUniqueID();
@@ -72,8 +86,15 @@ public abstract class IProjectile extends Entity {
         }
 
         super.tick();
+
+        // Purpur start
+        if (!(this instanceof EntityArrow)) { // EntityArrow handles its own despawn counter
+            this.tickDespawnCounter();
+        }
+        // Purpur end
     }
 
+    public boolean checkIfLeftOwner() { return this.h(); } // Purpur - OBFHELPER
     private boolean h() {
         Entity entity = this.getShooter();
 
@@ -137,7 +158,7 @@ public abstract class IProjectile extends Entity {
         iblockdata.a(this.world, iblockdata, movingobjectpositionblock, this);
     }
 
-    protected boolean a(Entity entity) {
+    protected boolean a(Entity entity) { return hitPredicate(entity); } public boolean hitPredicate(Entity entity) { // Purpur - OBFHELPER
         if (!entity.isSpectator() && entity.isAlive() && entity.isInteractable()) {
             Entity entity1 = this.getShooter();
             // Paper start - Cancel hit for vanished players
diff --git a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
index 57040fff5..83165cc58 100644
--- a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
@@ -57,6 +57,35 @@ public class PurpurWorldConfig {
         return PurpurConfig.config.getString("world-settings." + worldName + "." + path, PurpurConfig.config.getString("world-settings.default." + path));
     }
 
+    public int dragonFireballDespawnRate = -1;
+    public int eggDespawnRate = -1;
+    public int enderPearlDespawnRate = -1;
+    public int expBottleDespawnRate = -1;
+    public int fireworkDespawnRate = -1;
+    public int fishingHookDespawnRate = -1;
+    public int largeFireballDespawnRate = -1;
+    public int llamaSpitDespawnRate = -1;
+    public int potionDespawnRate = -1;
+    public int shulkerBulletDespawnRate = -1;
+    public int smallFireballDespawnRate = -1;
+    public int snowballDespawnRate = -1;
+    public int witherSkullDespawnRate = -1;
+    private void projectileDespawnRateSettings() {
+        dragonFireballDespawnRate = getInt("gameplay-mechanics.projectile-despawn-rates.dragon_fireball", dragonFireballDespawnRate);
+        eggDespawnRate = getInt("gameplay-mechanics.projectile-despawn-rates.egg", eggDespawnRate);
+        enderPearlDespawnRate = getInt("gameplay-mechanics.projectile-despawn-rates.ender_pearl", enderPearlDespawnRate);
+        expBottleDespawnRate = getInt("gameplay-mechanics.projectile-despawn-rates.experience_bottle", expBottleDespawnRate);
+        fireworkDespawnRate = getInt("gameplay-mechanics.projectile-despawn-rates.firework_rocket", fireworkDespawnRate);
+        fishingHookDespawnRate = getInt("gameplay-mechanics.projectile-despawn-rates.fishing_bobber", fishingHookDespawnRate);
+        largeFireballDespawnRate = getInt("gameplay-mechanics.projectile-despawn-rates.fireball", largeFireballDespawnRate);
+        llamaSpitDespawnRate = getInt("gameplay-mechanics.projectile-despawn-rates.llama_spit", llamaSpitDespawnRate);
+        potionDespawnRate = getInt("gameplay-mechanics.projectile-despawn-rates.potion", potionDespawnRate);
+        shulkerBulletDespawnRate = getInt("gameplay-mechanics.projectile-despawn-rates.shulker_bullet", shulkerBulletDespawnRate);
+        smallFireballDespawnRate = getInt("gameplay-mechanics.projectile-despawn-rates.small_fireball", smallFireballDespawnRate);
+        snowballDespawnRate = getInt("gameplay-mechanics.projectile-despawn-rates.snowball", snowballDespawnRate);
+        witherSkullDespawnRate = getInt("gameplay-mechanics.projectile-despawn-rates.wither_skull", witherSkullDespawnRate);
+    }
+
     public boolean squidImmuneToEAR = true;
     private void squidSettings() {
         squidImmuneToEAR = getBoolean("mobs.squid.immune-to-EAR", squidImmuneToEAR);
